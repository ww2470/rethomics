% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/io.R
\name{loadPsvData}
\alias{loadPsvData}
\title{Read data from a result file.}
\usage{
loadPsvData(what, min_time = 0, max_time = Inf, reference_hour = NULL,
  verbose = TRUE, FUN = NULL, ...)
}
\arguments{
\item{what}{an object which file to load and, optionally, associated variables/conditions (see details).}

\item{min_time}{exclude data before min_time (in seconds). This time is relative to the start of the experiement.}

\item{max_time}{exclude data after max_time (in seconds). This time is relative to the start of the experiement.}

\item{reference_hour}{the hour, in the day, to use as t0 reference. When no reference hour, all time is relative to the start of the experiment.}

\item{FUN}{an optionnal function to be applied to each ROI (i.e. a data.table), immeridatly after being loaded.}

\item{...}{extra arguments to be passed to \code{FUN}}
}
\value{
A data table where every row is an individual measurment (at a given time) in a unique ROI, and from a unique result file/experiment.
The time (column`t`) is expressed in seconds. Distance units (e.g. xy position, height/width) are expressed as a fraction of the ROI width.
}
\description{
This function is used to convert all the information
contained in a result file generated by PSV into an R data.table.
}
\details{
`what` can be one of two things:
\itemize{
 \item{A character vector. }{In which case, it is assumed that each element is the path to a different file to load.}
 \item{A dataframe. }{The dataframe \emph{must} have a column named `path`.
Arbitrary column can be added to map experimental condition to file name.
In addition, the dataframe can have a column named `region_id`. When it is defined, only the specified combinations of file and region_id
will be loaded. This allows to map additionnal conditions (data frame columns) to specific ROIs/files.
When additionnal conditions are provided, they will result in creation of custom columns in the output of this function.}
}
}
\note{
Analysis of many long (sevaral days) recording can use a large amount of RAM.
Therefore, it can sometimes be advantageaous to load an process ROIs one by one.
}
\examples{
# First of all, let us load files from the data sample with the package.
# Most likely, you will already have your own data files.
sample_files <- c("validation.db", "sample_1.db","sample_2.db")
# Extract the files in your computer
paths <- sapply(sample_files, loadSampleData)
# Now, `paths` his is just a vector of file names:
print(paths)
#################
#################
# Case 1: load ALL ROIS from a SINGLE FILE
validation_data_file <- paths[1]
# `validation_data_file` is simply the path to the db file in your computer
dt <- loadPsvData(validation_data_file)

###############
# Case 2: load ALL ROIS from MULTIPLE FILES
# we pass all the files we want to load as thw `what` argument
dt <- loadPsvData(paths)
# Note the column `file` in dt. It tells us which file/experiement
# each measurment originates from.
print(dt)

###############
# Case 3: load ALL ROIS from MULTIPLE FILES AND add CONDITIONS
# Let us imagine that each file/experiement
# is for a different experiemental condition.
# We can encode this information in a 'master-table' (data frame) where a column
# named `path` maps experiemental condition(s). For instance 3 different treatments:
master_table <- data.frame(path=paths, treatment=c("control", "drug_A", "drug_B"))
# Let us check our table:
print(master_table)
dt <- loadPsvData(master_table)
# Note that `dt` now contains a column for your treatment.
# This makes it easier to perform things such as average per treatment.
print(dt)
###############
# Case 4: load SELECTED ROIS from MULTIPLE FILE WITH CONDITIONS
# Sometimes, different ROIs are for different conditions.
# If the master table contains a column names `region_id`. only the specified ROIs will be added.
# Let us assume that we want to replicate case 3, but now we load only the first 20 rois.
master_table <- data.frame(path=paths, treatment=c("control", "drug_A", "drug_B"), region_id=rep(1:20,each= 3))
# We could also say that every even ROI is a male, and every odd is a male:
master_table$sex <- ifelse(master_table$roi \%\% 2, "male", "female" )
# Note that we have now two conditions.
# Let us check our new table:
print(master_table)
dt <- loadPsvData(master_table)
####################
# Case 5: Apply ANALYSIS/function while loading the data.
# You can apply a function from this package, or your oan function fo the data as it is being loaded.
# For instance, if you wish to peforme a "sleep" annotation:
dt <- loadPsvData(paths[1], FUN=sleepAnalysis)
# Note that you could of course combine this with more conditions/ROI selection
# For most complicated cases, you would have probably generated the
# master-table before analysing the results
}
\seealso{
\code{\link{loadMetaData}} To display global informations about a specific file.
}

