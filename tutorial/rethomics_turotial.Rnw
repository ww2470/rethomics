\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}
\section{Installation}
\texttt{rethomics} is still under heavy development, so it cannot be uploaded to the CRAN (Comprehensive R Archive Network) -- where most stabe packages are -- yet. Instead, we can install R using Hadley Wickham's popular \texttt{devtools}\footnote{installation instructions are available here https://github.com/hadley/devtools/blob/master/R/run-examples.r}.
Once you have \texttt{devtools} installed, it should be straightforward to install \texttt{rethomics}
<<>>=
library(devtools)
install_github("gilestrolab/rethomics",subdir = "rethomics")
@
Check for error messages. Then, ensure the package is installed by loading it:
<<>>=
library(rethomics)
@

\section{Loading data}
\subsection{Data structure}
In \texttt{rethomics} the goal is to store \emph{all} the behavioural data in one single dataframe, which is standard for subsequent statitical analysis.
In such a dataframe, every row correspond to a single measurment; that is he position of one animal at one time.
Every column describes a statistical variable such as t, and X and Y positions, but they can also hold 
information about arbitrary conditions such as treatment, sex, age, genotype and so on.

By convention:
\itemize{
\item{t, the variable holding the time, is always \emph{in seconds}}
\item{X and Y, are \emph{relative to the width of the region} they come from, and the \ewmph{origin is top-left}
}

For a single \textbf{experiment}, and when tracking a single animal (i.e. in a single \textbf{region}),
your data table could look like:
<<>>=
library(rethomics)
data(multiple_iterative_y_mazes)
single_animal <- multiple_iterative_y_mazes[experiment_id == "female_FALSE_11.db"]
print(single_animal)
@

The first thing you may notice is that the first few columns seem unnecessary as they have constant values.
This is because they describe variables that vary between individuals, and we have only one individual.

In order to unerstand the need for additionnal columns, we can load data from multiple experiements:
<<>>=
library(rethomics)
data(multiple_iterative_y_mazes)
print(multiple_iterative_y_mazes)
@

The data will \emph{always} have two columns: \textbf{experiment\_id} and \textbf{region\_id}.
Together, these columns form a \emph{key}, that is combinations of experiement \emph{and} region represent unique animals. in orther words, we can identify, unambiguously, any animal from its region and experiement identifier.
Instead of using the legacy data.frames, \texttt{rethomic} takes advantage of Matt Doyle's powerful \texttt{data.table} package\footnote{tutorial available at todo}.
This makes it very easy and efficient to work with large amount of behavioural data.
Common operation could involve filtering data and computing variable per condition or per individual.
Let us go through sevral examples:
<<>>=
library(rethomics)
data(multiple_iterative_y_mazes)
#WE can simply call this data table `dt'
dt <- multiple_iterative_y_mazes
# keeping only females
dt_female <- dt[sex == 'female',]
# excluding any data point before 30 secondes (i.e. keeping >= 30s)
dt_currated <- dt[t >= 30,]
# Computing, per animal, the time spent in the experiment
summary_dt =  dt[,.(time_spent = max(t) - min(t)),
                by=key(dt)]
print(summary_dt)
@
Much more can be acchived using \texttt{data.table}, so I would strongly reccoment to, at least, read the package introduction\footnote{todo}.


\subsection{Loading one file}


\subsection{Fancier queries}
\subsection{Loading from network drive}
\subsection{Analysing data}
\subsection{Sleep annotation}
\subsection{Visualisation}
\subsubsection{Overview plot}
\subsubsection{Ethograms}
\subsection{Bout analysis}



\end{document}